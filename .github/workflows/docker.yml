name: Sync Home Assistant from GHCR

on:
  push:
    paths:
      - 'versions.txt'

env:
  ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}
  ALIYUN_NAMESPACE: ${{ secrets.ALIYUN_NAMESPACE }}
  VERSIONS_FILE: 'versions.txt'

jobs:
  version_loader:
    runs-on: ubuntu-latest
    outputs:
      versions: ${{ steps.load_versions.outputs.versions }}
    steps:
      - uses: actions/checkout@v3

      - name: Load version list
        id: load_versions
        run: |
          versions=$(cat $VERSIONS_FILE | grep -v '^#' | grep -v '^$' | jq -R -s -c 'split("\n") | map(select(. != ""))')
          echo "versions=${versions}" >> $GITHUB_OUTPUT

  image_sync:
    needs: version_loader
    runs-on: ubuntu-latest
    strategy:
      matrix:
        version: ${{ fromJSON(needs.version_loader.outputs.versions) }}
        arch: [
          'home-assistant',
          'amd64-homeassistant',
          'i386-homeassistant',
          'armhf-homeassistant',
          'armv7-homeassistant',
          'aarch64-homeassistant',
          'generic-x86-64-homeassistant',
          'intel-nuc-homeassistant',
          'khadas-vim3-homeassistant',
          'odroid-c2-homeassistant',
          'odroid-c4-homeassistant',
          'odroid-m1-homeassistant',
          'odroid-n2-homeassistant',
          'odroid-xu-homeassistant',
          'qemuarm-homeassistant',
          'qemuarm-64-homeassistant',
          'qemux86-homeassistant',
          'qemux86-64-homeassistant',
          'raspberrypi-homeassistant',
          'raspberrypi2-homeassistant',
          'raspberrypi3-homeassistant',
          'raspberrypi3-64-homeassistant',
          'raspberrypi4-homeassistant',
          'raspberrypi4-64-homeassistant',
          'raspberrypi5-64-homeassistant',
          'tinker-homeassistant',
          'yellow-homeassistant',
          'green-homeassistant'
        ]
    steps:
      - uses: actions/checkout@v3

      - name: Login to Aliyun
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: Pull from GHCR
        run: |
          SRC_IMAGE="ghcr.io/home-assistant/${{ matrix.arch }}"
          DEST_IMAGE="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}"
          
          # 使用GitHub Token拉取GHCR镜像
          # echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
          
          docker pull ${SRC_IMAGE}:${{ matrix.version }} || {
            echo "::warning::Skipping ${{ matrix.arch }}:${{ matrix.version }} (not available)"
            exit 0
          }
          
          # 基础标签（所有架构）
          docker tag ${SRC_IMAGE}:${{ matrix.version }} ${DEST_IMAGE}:${{ matrix.version }}
          docker tag ${SRC_IMAGE}:${{ matrix.version }} ${DEST_IMAGE}:latest
          
          # 仅对主镜像添加特殊标签
          if [ "${{ matrix.arch }}" == "home-assistant" ]; then
            # 始终添加stable标签（指向当前版本）
            docker tag ${SRC_IMAGE}:${{ matrix.version }} ${DEST_IMAGE}:stable
            
            # 添加年月标签（从版本号提取）
            ym_tag=$(echo "${{ matrix.version }}" | awk -F. '{print $1"."$2}')
            docker tag ${SRC_IMAGE}:${{ matrix.version }} ${DEST_IMAGE}:${ym_tag}
            echo "Added stable and YYYY.MM tags for home-assistant:${{ matrix.version }}"
          fi

      - name: Push to Aliyun
        run: |
          DEST_IMAGE="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}"
          
          # 推送基础标签
          docker push ${DEST_IMAGE}:${{ matrix.version }}
          docker push ${DEST_IMAGE}:latest
          
          # 推送主镜像的特殊标签
          if [ "${{ matrix.arch }}" == "home-assistant" ]; then
            docker push ${DEST_IMAGE}:stable
            
            ym_tag=$(echo "${{ matrix.version }}" | awk -F. '{print $1"."$2}')
            docker push ${DEST_IMAGE}:${ym_tag}
          fi

      - name: Cleanup
        run: |
          docker rmi ghcr.io/home-assistant/${{ matrix.arch }}:${{ matrix.version }} || true
          docker rmi ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}:${{ matrix.version }} || true
          docker rmi ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}:latest || true
          
          if [ "${{ matrix.arch }}" == "home-assistant" ]; then
            ym_tag=$(echo "${{ matrix.version }}" | awk -F. '{print $1"."$2}')
            docker rmi ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/home-assistant:${ym_tag} || true
            docker rmi ${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/home-assistant:stable || true
          fi
