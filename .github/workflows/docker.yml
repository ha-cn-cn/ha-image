name: Home Assistant全组件同步
on:
  push:
    paths:
      - 'versions.txt'  # 版本文件变更时触发

env:
  ALIYUN_REGISTRY: ${{ secrets.ALIYUN_REGISTRY }}  # 阿里云仓库地址
  ALIYUN_NAMESPACE: ${{ secrets.ALIYUN_NAMESPACE }}  # 命名空间
  VERSIONS_FILE: 'versions.txt'  # 版本定义文件

jobs:
  # 组件版本解析器
  version_parser:
    runs-on: ubuntu-latest
    outputs:
      ha_version: ${{ steps.parse_ha.outputs.version }}  # HA核心版本
      cli_version: ${{ steps.parse_cli.outputs.version }}  # CLI版本
      components_version: ${{ steps.parse_components.outputs.version }}  # 组件版本
    steps:
      - uses: actions/checkout@v3

      # 解析Home Assistant核心版本
      - name: 解析HA核心版本
        id: parse_ha
        run: |
          version=$(grep '^home-assistant:' $VERSIONS_FILE | cut -d':' -f2)
          echo "version=${version:-}" >> $GITHUB_OUTPUT
          echo "HA核心版本: ${version:-未设置}"

      # 解析CLI版本
      - name: 解析CLI版本
        id: parse_cli
        run: |
          version=$(grep '^cli:' $VERSIONS_FILE | cut -d':' -f2)
          echo "version=${version:-}" >> $GITHUB_OUTPUT
          echo "CLI版本: ${version:-未设置}"

      # 解析组件版本（除CLI外）
      - name: 解析组件版本
        id: parse_components
        run: |
          version=$(grep -E '^(audio|dns|multicast|observer):' $VERSIONS_FILE | head -1 | cut -d':' -f2)
          echo "version=${version:-}" >> $GITHUB_OUTPUT
          echo "组件基准版本: ${version:-未设置}"

  # 版本验证器
  version_validator:
    needs: version_parser
    runs-on: ubuntu-latest
    outputs:
      valid_ha: ${{ steps.validate_ha.outputs.valid }}
      valid_cli: ${{ steps.validate_cli.outputs.valid }}
      valid_components: ${{ steps.validate_components.outputs.valid }}
    steps:
      # 验证HA核心版本
      - name: 验证HA核心版本
        id: validate_ha
        if: ${{ needs.version_parser.outputs.ha_version != '' }}
        run: |
          if docker manifest inspect ghcr.io/home-assistant/home-assistant:${{ needs.version_parser.outputs.ha_version }} >/dev/null 2>&1; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "✓ HA核心版本验证通过"
          else
            echo "::error::HA核心版本不存在"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      # 验证CLI版本
      - name: 验证CLI版本
        id: validate_cli
        if: ${{ needs.version_parser.outputs.cli_version != '' }}
        run: |
          if docker manifest inspect ghcr.io/home-assistant/amd64-hassio-cli:${{ needs.version_parser.outputs.cli_version }} >/dev/null 2>&1; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "✓ CLI版本验证通过"
          else
            echo "::error::CLI版本不存在"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

      # 验证组件版本
      - name: 验证组件版本
        id: validate_components
        if: ${{ needs.version_parser.outputs.components_version != '' }}
        run: |
          if docker manifest inspect ghcr.io/home-assistant/amd64-hassio-audio:${{ needs.version_parser.outputs.components_version }} >/dev/null 2>&1; then
            echo "valid=true" >> $GITHUB_OUTPUT
            echo "✓ 组件版本验证通过"
          else
            echo "::error::组件版本不存在"
            echo "valid=false" >> $GITHUB_OUTPUT
          fi

  # Home Assistant核心同步
  sync_homeassistant:
    needs: [version_parser, version_validator]
    if: ${{ needs.version_parser.outputs.ha_version != '' && needs.version_validator.outputs.valid_ha == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [
          'home-assistant',          # 通用镜像
          'amd64-homeassistant',     # AMD64架构
          'i386-homeassistant',      # 32位x86架构
          'armhf-homeassistant',     # ARM硬浮点
          'armv7-homeassistant',     # ARMv7架构
          'aarch64-homeassistant',   # ARM64架构
          # 以下为特定设备镜像
          'generic-x86-64-homeassistant',
          'intel-nuc-homeassistant',
          'khadas-vim3-homeassistant',
          'odroid-c2-homeassistant',
          'odroid-c4-homeassistant',
          'odroid-m1-homeassistant',
          'odroid-n2-homeassistant',
          'odroid-xu-homeassistant',
          'qemuarm-homeassistant',
          'qemuarm-64-homeassistant',
          'qemux86-homeassistant',
          'qemux86-64-homeassistant',
          'raspberrypi-homeassistant',
          'raspberrypi2-homeassistant',
          'raspberrypi3-homeassistant',
          'raspberrypi3-64-homeassistant',
          'raspberrypi4-homeassistant',
          'raspberrypi4-64-homeassistant',
          'raspberrypi5-64-homeassistant',
          'tinker-homeassistant',
          'yellow-homeassistant',
          'green-homeassistant'
        ]
    steps:
      - uses: actions/checkout@v3

      - name: 登录阿里云
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ALIYUN_REGISTRY }}
          username: ${{ secrets.ALIYUN_USERNAME }}
          password: ${{ secrets.ALIYUN_PASSWORD }}

      - name: 同步HA核心镜像
        run: |
          version=${{ needs.version_parser.outputs.ha_version }}
          src="ghcr.io/home-assistant/${{ matrix.arch }}"
          dest="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}"

          docker pull ${src}:${version}
          docker tag ${src}:${version} ${dest}:${version}
          docker tag ${src}:${version} ${dest}:latest
          docker push ${dest}:${version}
          docker push ${dest}:latest

  # CLI同步
  sync_cli:
    needs: [version_parser, version_validator]
    if: ${{ needs.version_parser.outputs.cli_version != '' && needs.version_validator.outputs.valid_cli == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: ['amd64', 'i386', 'armhf', 'armv7', 'aarch64']
    steps:
      - uses: actions/checkout@v3

      - name: 同步CLI镜像
        run: |
          version=${{ needs.version_parser.outputs.cli_version }}
          src="ghcr.io/home-assistant/${{ matrix.arch }}-hassio-cli"
          dest="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}-hassio-cli"

          docker pull ${src}:${version}
          docker tag ${src}:${version} ${dest}:${version}
          docker tag ${src}:${version} ${dest}:latest
          docker push ${dest}:${version}
          docker push ${dest}:latest

  # 其他组件同步
  sync_components:
    needs: [version_parser, version_validator]
    if: ${{ needs.version_parser.outputs.components_version != '' && needs.version_validator.outputs.valid_components == 'true' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        component: ['audio', 'dns', 'multicast', 'observer']
        arch: ['amd64', 'i386', 'armhf', 'armv7', 'aarch64']
    steps:
      - uses: actions/checkout@v3

      - name: 同步${{ matrix.component }}组件
        run: |
          version=${{ needs.version_parser.outputs.components_version }}
          src="ghcr.io/home-assistant/${{ matrix.arch }}-hassio-${{ matrix.component }}"
          dest="${{ env.ALIYUN_REGISTRY }}/${{ env.ALIYUN_NAMESPACE }}/${{ matrix.arch }}-hassio-${{ matrix.component }}"

          docker pull ${src}:${version}
          docker tag ${src}:${version} ${dest}:${version}
          docker tag ${src}:${version} ${dest}:latest
          docker push ${dest}:${version}
          docker push ${dest}:latest
